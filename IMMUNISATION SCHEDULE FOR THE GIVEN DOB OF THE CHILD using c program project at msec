PROGRAM:
#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<dos.h>
#include<time.h>
#include <alloc.h>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
 void module1(void);
 void module2(void);
 void module3(void);
 void userchk(void);
 char privilage='\0';
 void menu(void);
struct patient
{char p_id[10];
char name[20];
char sex[10];
char age[4];
char address[50];
char diagnosis[200];
char bloodgroup[10];
char test[200];};
void main()
{ int t;
  clrscr();
 printf("\n\n\n\t\t\t\tWELCOME TO \t\t\t");
printf("\n\n\n\t\t\t=========================");
 printf("\n\n\n\t\t\t ***** child immunisation application ***** ");
 userchk();
}
void userchk()
 {  int t;
char passuser[]={"hospital"};
//char passadmin[]={"authority"};
char s1[15];
int i=0;
char ch='\0';
char s2[15];
int us_choice;
int us_check;
printf("\n\n\t\t\t\tenter choice \n\n\t\t\t\t1- USER \n\n\t\t\t\t2-REGISTER\n");
printf("\t\t\t\t");
scanf("%d",&us_choice);
if(us_choice==2)
{clrscr();
module1();
printf("\n thank you for giving your details ur common password is HOSPITAL");
printf("\nPRESS 0 TO SAVE AND CONTINUE");
scanf("%d",&t);
if(t==0)
menu();
}
if(us_choice==1)
{ clrscr();
printf("\n\n\n\n\n\n\n\n\t\t\t\tENTER PASSWORD\n");
printf("\t\t\t\t");
while(ch!=13)
{
ch=getch();
s2[i++]=ch;
printf("*");
}
s2[i-1]='\0';
us_check = stricmp(passuser,s2);
 // printf("%d",us_check);
if(us_check==0)
{
printf("welcome user");
privilage = 'u';
menu();
} else
{
printf("entered password is wrong");
}
}
void menu()
 {
 int choice;
 int mm;
 clrscr();
 printf("\n\n\n\n\t\t\t\t\tWELCOME TO");
 printf("\n\n\t\t\t ***** IMMUNISATION APPLICARION ***** ");
 printf("\n\n\n\n\t\t\t***********IMMUNISATION SOFTWARE***********");
 printf(" \n\n\t\t\t1 - Determining the immunisation details\n\n\t\t\t2 - View baby detail ");
 printf(" \n\n\t\t\t3 - Doctors enquiry ");
 printf(" \n");
 n1:
 printf("\n\t\t\tenter choice");
 printf("\n\t\t\t");
 scanf("%d",&choice);
switch(choice)
 {
case 1 :  immun();
	   menu();
	   break;

case 2 :clrscr();
 printf(" view baby detail");

 module2();
 printf(" \nwould you like to goto the main menu");
 printf(" \n 1 - yes \t\t 0 - no\n\t");
 scanf("%d",&mm);
 if(mm==1)
 {
menu();
}
else
{
 break;
 }
case 3 :
 printf("Welcome to doctor's enquiry section");
 module3();
 printf(" \nwould you like to goto the main menu");
 printf(" \n 1 - yes \t\t 0 - no\n\t");
 scanf("%d",&mm);
 if(mm==1)
 {
menu();
}
else
{
 break;
 }


}
}
void module1()
{
FILE *source;
char another='y';
struct patient detail;
source=fopen("pat_det.dat","ab");
while(another=='y' || another=='Y')
{
printf("\n Enter Details of a baby --\n");
printf("\n Parent ID : ");
fflush(stdin);
gets(detail.p_id);
printf("\n Name of parent : ");
fflush(stdin);
gets(detail.name);
printf("\n gender of baby : ");
fflush(stdin);
gets(detail.sex);
//printf("\n Age/days : ");
//gets(detail.age);
printf("\n Bloodgroup : ");
fflush(stdin);
gets(detail.bloodgroup); printf("\n Address : ");
fflush(stdin);
gets(detail.address);
printf("\n Diagnosis : ");
fflush(stdin);
gets(detail.diagnosis);
printf("\n Test done so far : ");
fflush(stdin);

gets(detail.test);
if(source==NULL)
{
printf("\n Can not open file.");
}
else
{
fwrite(&detail,sizeof(detail),1,source);
fclose(source);
}
printf("\n Add another record (y/n) :");
another=getche();}}
void module2()
{
FILE *target;
struct patient detail;
char ch;
target=fopen("pat_det.dat","rb");
if(target==NULL)
{
printf("\n Can not open file");
}
else
{
while(fread(&detail,sizeof(struct patient),1,target)==1)
{
printf("\n%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",detail.p_id,detail.name,detail.address,detail.bloodgroup,detail.diagnosis,detail.sex,detail.test,detail.age);
}
while(ch!=EOF)
{
printf("%c",ch);
ch=fgetc(target);
}
fclose(target);
}
}
void module3()//module for doctors enquiry section
 {
 int choice1;
 clrscr();
 printf("\n \t\t\tChoose respected doctor name");
 printf("\n\t\t\t 1 - Devika k.s \n\t\t\t 2 - Nerupama c.t ");
 printf("\n\t\t\t 3 - Ram janardhanan \n\t\t\t4 - Santosh sharma ");
 printf("\n\t\t\t 5 - Dharneesh gh \n\t\t\t 6 - other specialist ");
 printf("\n \t\tenter doctor for whom you want  consultation time ");
 scanf("%d",&choice1);
 if(choice1==1)
 { printf("\n\nthe timings are 11:00am-3:00pm");}
 else if(choice1==2)
 { printf("\n\nthe timings are 1:00am-4:00pm");}
else if(choice1==3)
 { printf("\n\nthe timings are 12:00pm-5:00pm");}
 else if(choice1==4)
 {
 printf("\n\nthe timings are 10:00am-3:00pm");
 }
 else if(choice1==5) {

printf("\n\nthe timings are 11:00-7:00pm");
 }
 else if(choice1==6)
 {
 printf("\n\nthe timings are 8:00am -1:pm");
 }
 else{
 printf("\n\ninvalid choice please retype again");
 }
 }
void immun()
{
int immsch_days[37];
char *immsch_desc[37];
time_t rawtime;
struct tm * timeinfo;

int l=0, md=0, mm=0, my=0;
int skip, i;
char buffer[30], outputline[70];
struct tm  t = { 0 };

char outyr[5], outmm[3], outdd[3];
char thisyr[5], thismm[3], thisdd[3];
int d1,m1,y1,d2,m2,y2;
int resultdays;
int get_dob(int*, int*, int*);

immsch_days[0]= 0;
immsch_days[1]= 0;
immsch_days[2]= 42;
immsch_days[3]= 42;
immsch_days[4]= 42;
immsch_days[5]= 42;
immsch_days[6]= 42;
immsch_days[7]= 42;
immsch_days[8]= 70;
immsch_days[9]= 70;
immsch_days[10]= 70;
immsch_days[11]= 70;
immsch_days[12]= 70;
immsch_days[13]= 70;
immsch_days[14]= 98;
immsch_days[15]= 98;
immsch_days[16]= 98;
immsch_days[17]= 98;
immsch_days[18]= 98;
immsch_days[19]= 98;
immsch_days[20]= 252;
immsch_days[21]= 336;
immsch_days[22]= 420;
immsch_days[23]= 420;
immsch_days[24]= 420;
immsch_days[25]= 448;
immsch_days[26]= 448;
immsch_days[27]= 448;
immsch_days[28]= 504;
immsch_days[29]= 728;
immsch_days[30]= 1820;
immsch_days[31]= 1820;
immsch_days[32]= 1820;
immsch_days[33]= 1820;
immsch_days[34]= 1820;
immsch_days[35]= 3640;
immsch_days[36]= 3640;
immsch_desc[0]="BCG Vaccine";
immsch_desc[1]="OPV-0 Dose";
immsch_desc[2]="DTwP-1 or DTaP-1";
immsch_desc[3]="OPV-1 or OPV-1+IPV-1";
immsch_desc[4]="HIB-1";
immsch_desc[5]="Hepatitis-B1";
immsch_desc[6]="Rotavirus-1";
immsch_desc[7]="PCV-1";
immsch_desc[8]="DTwP-2 or DTaP-2";
immsch_desc[9]="OPV-2 or OPV-2+IPV-2";
immsch_desc[10]="HIB-2";
immsch_desc[11]="Hepatitis-B2";
immsch_desc[12]="Rotavirus-2";
immsch_desc[13]="PCV-2";
immsch_desc[14]="DTwp-3 or DTaP-3";
immsch_desc[15]="OPV-3 or OPV-3+IPV-3";
immsch_desc[16]="HIB-3";
immsch_desc[17]="Hepatitis-B3";
immsch_desc[18]="Rotavirus-3";
immsch_desc[19]="PCV-3";
immsch_desc[20]="Measles";
immsch_desc[21]="Hepatitis-A-1";
immsch_desc[22]="MMR-1";
immsch_desc[23]="Varicella";
immsch_desc[24]="PCV Booster";
immsch_desc[25]="DTwP-1-B-1 or DTaPB-1";
immsch_desc[26]="OPV-4 or OPV-4 + IPV-4";
immsch_desc[27]="HIB-B-1";
immsch_desc[28]="Hepatitis-A2";
immsch_desc[29]="Typhoid-1";
immsch_desc[30]="DTwP-1-B-2 or DTaPB-2";
immsch_desc[31]="OPV-5";
immsch_desc[32]="MMR-2";
immsch_desc[33]="Typhoid-2";
immsch_desc[34]="Varicella-2";
immsch_desc[35]="Tdap or Td";
immsch_desc[36]="HPV";
l = get_dob(&md, &mm, &my);
if (l == 1)
	{
	time ( &rawtime );
	timeinfo = localtime ( &rawtime );
	strftime(thisyr, 5, "%Y", timeinfo);
	strftime(thismm, 3, "%m", timeinfo);
	strftime(thisdd, 3, "%d", timeinfo);
	d2 = atoi(thisdd);
	m2 = atoi(thismm);
	y2 = atoi(thisyr);
	resultdays = daysbetween(md,mm,my,d2,m2,y2);
	printf("\n Age: %d days \n",resultdays);


for (i=0; i<=36; i++){
skip = immsch_days[i];
	t.tm_mday = md;
	t.tm_mon = mm-1;
	t.tm_year = my-1900;

	t.tm_mday += skip;
	mktime(&t);

                              strftime(outyr,5,"%Y",&t);
	strftime(outmm,3,"%m",&t);
	strftime(outdd,3,"%d",&t);
                                         d1 = atoi(outdd);
                                        m1 = atoi(outmm);
                                           y1 = atoi(outyr);
resultdays = daysbetween(d1,m1,y1,d2,m2,y2);
if (resultdays < -14)
textcolor(YELLOW);
if (resultdays > 14)
textcolor(RED);
if ((resultdays >= -14) && (resultdays <=14 ) )
textcolor(GREEN);
strftime(buffer, 30, "%d-%m-%Y", &t);
strcpy(outputline," ");strcat(outputline,buffer);
strcat(outputline,"  ");strcat(outputline,immsch_desc[i]);
cputs(outputline);
printf("\n");
getch();
		}
}printf("\n\n------------- End of Schedule -------------");
getch();

//
}
int get_dob(int *id, int *im, int *iy)
{
   int d,m,y;
   int daysinmonth[12]={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
   int legit = 0;
	clrscr();
   printf("\n Enter the Child's Date of Birth:(dd-mm-yyyy):");
   scanf("%i-%i-%i",&d,&m,&y);


   if(y % 400 == 0 || (y % 100 != 0 && y % 4 == 0))
    daysinmonth[1]=29;


   if ((m<13) && (y>2003))
   {
      if( d <= daysinmonth[m-1] )
	legit=1;
   }


   if (legit==1)
	{
      *id = d;
	  *im = m;
	  *iy = y;
	  return legit;
	}
   else
	{
      printf("Date is Invalid or child is greater than 12 years!");
	  getch();
	  return legit;
	}

}

int daysbetween(day1, mon1, year1, day2, mon2, year2)
{

	int ref,dd1,dd2,i,outdays;

	ref = year1;
	if(year2<year1)
	ref = year2;
	dd1=0;
	dd1=dater(mon1);
	for(i=ref;i<year1;i++)
	{
		if(i%4==0)
			dd1+=1;
	}
	dd1=dd1+day1+(year1-ref)*365;
	dd2=0;
	for(i=ref;i<year2;i++)
	{
		if(i%4==0)
		dd2+=1;
	}
	

dd2=dater(mon2)+dd2+day2+((year2-ref)*365);
outdays = dd2 - dd1;
if (outdays > 0)
	outdays = outdays + 1;
	else
	if (outdays < 0)
		outdays = outdays + (-1);

	return outdays;
}

int dater(x)
{ int y=0;
	switch(x)
	{
	case 1: y=0; break;
	case 2: y=31; break;
	case 3: y=59; break;
	case 4: y=90; break;
	case 5: y=120;break;
	case 6: y=151; break;
	case 7: y=181; break;
	case 8: y=212; break;
	case 9: y=243; break;
	case 10:y=273; break;
	case 11:y=304; break;
	case 12:y=334; break;
	default: printf("Invalid Input\n\n\n\n"); exit(1);
	}
	return(y);

}
